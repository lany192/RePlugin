apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'

repositories {
    maven { url 'https://maven.aliyun.com/repository/google' } //google
    maven { url 'https://maven.aliyun.com/repository/public' } //public
    maven { url 'https://maven.aliyun.com/repository/jcenter' } //jcenter
    mavenCentral()
    google()
}

dependencies {
    implementation 'com.android.tools.build:gradle:8.0.0'
    implementation 'org.json:json:20231013'
    implementation 'org.codehaus.groovy:groovy:3.0.19'
    implementation 'com.squareup:javapoet:1.13.0'

    implementation gradleApi()
    implementation localGroovy()

    implementation 'com.google.gradle:osdetector-gradle-plugin:1.2.1'
    implementation 'net.dongliu:apk-parser:2.6.10'
}

gradlePlugin {
    plugins {
        RepluginHostPlugin {
            id = 'replugin-host-gradle'
            implementationClass = 'com.qihoo360.replugin.gradle.host.Replugin'
        }
    }
}

afterEvaluate { project ->
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = 'com.qihoo360.replugin'
                artifactId = 'replugin-host-gradle'
                version = '3.0.1'
                afterEvaluate {
                    from components.java
                }
            }
        }
    }

    tasks.register('sourcesJar', Jar) {
        dependsOn classes
        getArchiveClassifier().convention('sources')
        getArchiveClassifier().set('sources')
        from sourceSets.main.allSource
    }

    tasks.register('javadocJar', Jar) {
        dependsOn javadoc
        getArchiveClassifier().convention('javadoc')
        getArchiveClassifier().set('javadoc')
        from javadoc.destinationDir
    }

    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}